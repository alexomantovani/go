// Mocks generated by Mockito 5.4.5 from annotations
// in go/test/widget/widgets/motel/motel_carousel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:carousel_slider/carousel_controller.dart' as _i2;
import 'package:flutter/material.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CarouselSliderController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarouselSliderController extends _i1.Mock
    implements _i2.CarouselSliderController {
  MockCarouselSliderController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get ready =>
      (super.noSuchMethod(Invocation.getter(#ready), returnValue: false)
          as bool);

  @override
  _i3.Future<Null> get onReady =>
      (super.noSuchMethod(
            Invocation.getter(#onReady),
            returnValue: _i3.Future<Null>.value(),
          )
          as _i3.Future<Null>);

  @override
  _i3.Future<void> nextPage({Duration? duration, _i4.Curve? curve}) =>
      (super.noSuchMethod(
            Invocation.method(#nextPage, [], {
              #duration: duration,
              #curve: curve,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> previousPage({Duration? duration, _i4.Curve? curve}) =>
      (super.noSuchMethod(
            Invocation.method(#previousPage, [], {
              #duration: duration,
              #curve: curve,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void jumpToPage(int? page) => super.noSuchMethod(
    Invocation.method(#jumpToPage, [page]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<void> animateToPage(
    int? page, {
    Duration? duration,
    _i4.Curve? curve,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #animateToPage,
              [page],
              {#duration: duration, #curve: curve},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void startAutoPlay() => super.noSuchMethod(
    Invocation.method(#startAutoPlay, []),
    returnValueForMissingStub: null,
  );

  @override
  void stopAutoPlay() => super.noSuchMethod(
    Invocation.method(#stopAutoPlay, []),
    returnValueForMissingStub: null,
  );
}
